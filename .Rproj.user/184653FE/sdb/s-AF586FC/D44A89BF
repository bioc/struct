{
    "collab_server" : "",
    "contents" : "#' stato_class\n#'\n#' A base class in the \\pkg{struct} package. Provides several fundamental methods for the STATO ontology and should not be called directly.\n#' @export stato\n#' @include generics.R model_class.R stato_class.R\n#' @importFrom ontologyIndex get_ontology\n\nstato<-setClass(\n  \"stato\",\n  slots=c('stato.id'=\"character\"\n\n  )\n)\n\n#' @describeIn stato get the stato.id for an object\n#' @export\nsetMethod(f=\"stato.id\",\n          signature=c('stato'),\n          definition=function(obj)\n          {\n            if (!exists('ont',envir = statoOntology))\n            {\n              # load the ontology if it hasnt been done already\n              stato.env()\n            }\n            return(obj@stato.id)\n          }\n)\n\n#' @describeIn stato get the STATO name for an object\n#' @export\nsetMethod(f=\"stato.name\",\n          signature=c('stato'),\n          definition=function(obj)\n          {\n            id=stato.id(obj)\n            return(statoOntology$ont$name[[id]])\n          }\n)\n\n#' @describeIn stato get the STATO definition for an object\n#' @export\nsetMethod(f=\"stato.definition\",\n          signature=c('stato'),\n          definition=function(obj)\n          {\n            id=stato.id(obj)\n            return(strip_special(statoOntology$ont$def[[id]]))\n          }\n)\n\nstatoOntology=new.env()\n\nstato.env=function()\n{\n  path.to.ontology=file.path(path.package('struct'),'/extdata/stato-reasoned.obo')\n  assign('ont',ontologyIndex::get_ontology(path.to.ontology,extract_tags = 'everything'),envir=statoOntology)\n}\n\n#' @describeIn stato get the STATO definition for an object\n#' @export\nsetMethod(f=\"stato.summary\",\n          signature=c('stato'),\n          definition=function(obj)\n          {\n            cat(stato.id(obj),'\\n')\n            cat(stato.name(obj),'\\n')\n            cat(stato.definition(obj),'\\n')\n            cat('\\nInputs:\\n')\n            p=param.ids(obj)\n            for (i in p)\n            {\n              if (is(param.obj(obj,i),'stato'))\n              {\n                cat(stato.id(param.obj(obj,i)),'\\n')\n                cat(stato.name(param.obj(obj,i)),'\\n')\n                cat(stato.definition(param.obj(obj,i)),'\\n\\n')\n              }\n            }\n            cat('\\nOutputs:\\n')\n            p=output.ids(obj)\n            for (i in p)\n            {\n              if (is(output.obj(obj,i),'stato'))\n              {\n                cat(stato.id(output.obj(obj,i)),'\\n')\n                cat(stato.name(output.obj(obj,i)),'\\n')\n                cat(stato.definition(output.obj(obj,i)),'\\n\\n')\n              }\n            }\n            cat('\\nCharts:\\n')\n            p=chart.ids(obj)\n            for (i in p)\n            {\n              if (is(chart.obj(obj,i),'stato'))\n              {\n                cat(stato.id(chart.obj(obj,i)),'\\n')\n                cat(stato.name(chart.obj(obj,i)),'\\n')\n                cat(stato.definition(chart.obj(obj,i)),'\\n\\n')\n              }\n            }\n          }\n)\n\n# internal function to strip special chars from the description\nstrip_special=function(str,chars=\"\\\"|\\\\[|\\\\]\")\n{\n  str=gsub(pattern=chars, replacement=\"\", x=str)\n  return(str)\n}\n\n#' @describeIn stato create a pdf of the basic use for this object\n#' @export\nsetMethod(f=\"stato.pdf\",\n          signature=c('stato'),\n          definition=function(obj,outpath,filename,outformat='html_document')\n          {\n            rmarkdown::render(file.path(path.package('struct'),'pdf_obj_report.Rmd'),\n                              output_file =  filename,\n                              output_dir = outpath,\n                              output_format = outformat,\n                              quiet = TRUE\n            )\n          }\n\n)\n",
    "created" : 1532008212598.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2005045886",
    "id" : "D44A89BF",
    "lastKnownWriteTime" : 1531823735,
    "last_content_update" : 1531823735,
    "path" : "~/GitHub/struct/R/stato_class.R",
    "project_path" : "R/stato_class.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}