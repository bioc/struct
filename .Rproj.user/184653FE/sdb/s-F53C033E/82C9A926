{
    "collab_server" : "",
    "contents" : "#' dataset class\n#'\n#' an object for holding raw data and associated meta data\n#' @export dataset\n#' @slot name (character) name of the dataset\n#' @slot description (character) brief description of the dataset\n#' @slot data (data.frame) matrix of data, samples in rows, variables/features in columns.\n#' @slot sample.meta (data.frame) data frame of sample meta data e.g. group membership\n#' @slot variable.meta (data.frame) data frame of variable meta data\n#' @rdname dataset\n#' @include generics.R struct_class.R chartable_class.R stato_class.R chart_class.R chart_stato.R dataset_chart_fcns.R\n#'\ndataset<-setClass(\n  \"dataset\",\n  contains=c(\"struct_class\",'chartable_class'),\n  slots=c(name=\"character\",\n          description=\"character\",\n          data=\"data.frame\",\n          main.factor='character',\n          sample.meta=\"data.frame\",\n          variable.meta=\"data.frame\",\n          charts.boxplot=\"chart.stato\",\n          charts.mv_histogram=\"chart\",\n          charts.mv_boxplot=\"chart\"\n  ),\n  prototype=list(name=\"Dataset000\",\n                 description=\"an empty dataset object\",\n                 charts=c('boxplot','mv_histogram','mv_boxplot'),\n                 charts.boxplot=chart.stato(name='box and whisker plot',\n                                            description='Boxplots showing the range of observed values for feature, separated by group if a factor.',\n                                            type='boxplot',\n                                            fcn=dataset_boxplot_fcn,\n                                            opt=list(label_outliers=TRUE, # label outliers\n                                                     feature_to_plot='V1',   #  feature to plot by label\n                                                     factor_name='factor',   # name of factor to appear on legend\n                                                     show_counts=TRUE\n                                            ),\n                                            stato.id='STATO:0000243'),\n\n                 charts.mv_histogram=chart(name='Missing values histogram',\n                                           description='a histogram of the % missing values per sample/feature',\n                                           type='histogram',\n                                           fcn=missing_value_histogram,\n                                           opt=list(by_sample=TRUE)),\n\n                 charts.mv_boxplot=chart(name='Missing values boxplot',\n                                           description='a histogram of the % missing values per sample/feature',\n                                           type='histogram',\n                                           fcn=missing_value_boxplot,\n                                           opt=list(by_sample=TRUE,\n                                                    factor_name='factor')\n                 )\n  )\n\n)\n\n#' @export\n#' @param obj a dataset object\n#' @rdname dataset\nsetMethod(f=\"data\",\n          signature=c(\"dataset\"),\n          definition=function(obj)\n          {\n            return(obj@data)\n          }\n)\n\n#' @export\n#' @rdname dataset\nsetMethod(f=\"data<-\",\n          signature=c(\"dataset\"),\n          definition=function(obj,value)\n          {\n            obj@data=value\n            return(obj)\n          }\n)\n\n#' @export\n#' @rdname dataset\nsetMethod(f=\"sample.meta\",\n          signature=c(\"dataset\"),\n          definition=function(obj)\n          {\n            return(obj@sample.meta)\n          }\n)\n\n#' @export\n#' @rdname dataset\nsetMethod(f=\"sample.meta<-\",\n          signature=c(\"dataset\"),\n          definition=function(obj,value)\n          {\n            obj@sample.meta=value\n            return(obj)\n          }\n)\n\n#' @export\n#' @rdname dataset\nsetMethod(f=\"variable.meta\",\n          signature=c(\"dataset\"),\n          definition=function(obj)\n          {\n            return(obj@variable.meta)\n          }\n)\n\n#' @export\n#' @rdname dataset\nsetMethod(f=\"variable.meta<-\",\n          signature=c(\"dataset\"),\n          definition=function(obj,value)\n          {\n            obj@variable.meta=value\n            return(obj)\n          }\n)\n\n#' @export\nsetMethod(f=\"show\",\n          signature=c(\"dataset\"),\n          definition=function(object)\n          {\n            cat('A dataset object\\nName: ',name(object),'\\nDescription: ',description(object),sep='')\n          }\n)\n\n#' @import ggplot2 ggthemes ggrepel\n#' @importFrom pmp createClassAndColors theme_Publication scale_colour_Publication\n#' @importFrom sp point.in.polygon\n#' @importFrom scales squish\n#' @export\nsetMethod(f=\"chart.plot\",\n          signature=\"dataset\",\n          definition = function(obj,name,opt=NULL) {\n            # check if valid chart name\n            is.chart(obj,name) # error if not\n\n            # if opt is null get defaults for this chart\n            if (is.null(opt))\n            {\n              opt=chart.opt(obj,name)\n            }\n\n            cobj=chart.obj(obj,name)\n\n            return(cobj@fcn(obj,opt))\n          }\n\n)\n\n#' @export\nsetMethod(f=\"chart.opt\",\n          signature='dataset',\n          definition=function(obj,name)\n          {\n            x=chart.obj(obj,name)\n            return(x@opt)\n          }\n)\n",
    "created" : 1532419594846.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3420981706",
    "id" : "82C9A926",
    "lastKnownWriteTime" : 1532600499,
    "last_content_update" : 1532600499128,
    "path" : "~/GitHub/struct/R/dataset_class.R",
    "project_path" : "R/dataset_class.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}